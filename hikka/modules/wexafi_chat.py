# meta developer: @wexafibio
from os import remove

from telethon.errors import (
    BotGroupsBlockedError,
    ChannelPrivateError,
    ChatAdminRequiredError,
    ChatWriteForbiddenError,
    InputUserDeactivatedError,
    MessageTooLongError,
    UserAlreadyParticipantError,
    UserBlockedError,
    UserIdInvalidError,
    UserKickedError,
    UserNotMutualContactError,
    UserPrivacyRestrictedError,
    YouBlockedUserError,
)

from telethon.tl.functions.channels import InviteToChannelRequest, LeaveChannelRequest
from telethon.tl.functions.messages import AddChatUserRequest
from telethon.tl.types import (
    ChannelParticipantCreator,
    ChannelParticipantsAdmins,
    ChannelParticipantsBots,
    PeerChat,
)
import os
from datetime import datetime

from telethon.tl.functions.channels import GetFullChannelRequest, GetParticipantsRequest
from telethon.tl.functions.messages import GetHistoryRequest
from telethon.tl.functions.photos import GetUserPhotosRequest
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.types import (
    ChannelParticipantsAdmins,
    MessageActionChannelMigrateFrom,
    UserStatusOnline,
)
from .. import loader, utils
import asyncio
from datetime import datetime
import logging
from .. import loader, utils
from telethon.tl.functions.channels import JoinChannelRequest


@loader.tds
class wexafi_chat(loader.Module):
    """–ß–∞—Ç –º–æ–¥—É–ª–∏"""

    strings = {"name": "wexafi_chat",
               "loading_stats": "<b><emoji document_id=5326015457155620929>üîÑ</emoji> –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</b>",
               }
    async def client_ready(self, client, db):
        self.db = db
        self._client = client

    async def useridcmd(self, message):
        """ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        try:
            if args:
                user = await message.client.get_entity(
                    args if not args.isdigit() else int(args)
                )
            else:
                user = await message.client.get_entity(
                    reply.sender_id if reply else message.sender_id
                )
        except ValueError:
            user = await message.client.get_entity(message.sender_id)

        await message.edit(
            f"<b>–ò–º—è:</b> <code>{user.first_name}</code>\n"
            f"<b>ID:</b> <code>{user.id}</code>"
        )

    async def chatidcmd(self, message):
        """ID —á–∞—Ç–∞."""
        if not message.is_private:
            args = utils.get_args_raw(message)
            to_chat = None

            try:
                if args:
                    to_chat = args if not args.isdigit() else int(args)
                else:
                    to_chat = message.chat_id

            except ValueError:
                to_chat = message.chat_id

            chat = await message.client.get_entity(to_chat)

            await message.edit(
                f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{chat.title}</code>\n"
                f"<b>ID</b>: <code>{chat.id}</code>"
            )
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b>")


    async def leavecmd(self, message):
        """–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞."""
        args = utils.get_args_raw(message)
        if not message.is_private:
            if args:
                await message.edit(f"<b>–î–æ —Å–≤—è–∑–∏.\n–ü—Ä–∏—á–∏–Ω–∞: {args}</b>")
            else:
                await message.edit("<b>–ü–æ–∫–∞.</b>")
            await message.client(LeaveChannelRequest(message.chat_id))
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b>")

    async def userscmd(self, message):
        """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ."""
        if not message.is_private:
            await message.edit("<b>–°—á–∏—Ç–∞–µ–º...</b>")
            args = utils.get_args_raw(message)
            info = await message.client.get_entity(message.chat_id)
            title = info.title or "—ç—Ç–æ–º —á–∞—Ç–µ"

            if not args:
                users = await message.client.get_participants(message.chat_id)
                mentions = f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ "{title}": {len(users)}</b> \n'
            else:
                users = await message.client.get_participants(
                    message.chat_id, search=f"{args}"
                )
                mentions = (
                    f'<b>–í —á–∞—Ç–µ "{title}" –Ω–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–º–µ–Ω–µ–º'
                    f" {args}:</b> \n"
                )

            for user in users:
                if not user.deleted:
                    mentions += (
                        f'\n‚Ä¢ <a href ="tg://user?id={user.id}">{user.first_name}</a> |'
                        f" <code>{user.id}</code>"
                    )
                else:
                    mentions += f"\n‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç <b>|</b> <code>{user.id}</code>"

            try:
                await message.edit(mentions)
            except MessageTooLongError:
                await message.edit(
                    "<b>–ß–µ—Ä—Ç, —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —á–∞—Ç. –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤"
                    " —Ñ–∞–π–ª...</b>"
                )
                file = open("userslist.md", "w+")
                file.write(mentions)
                file.close()
                await message.client.send_file(
                    message.chat_id,
                    "userslist.md",
                    caption="<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ {}:</b>".format(title),
                    reply_to=message.id,
                )
                remove("userslist.md")
                await message.delete()
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b>")

    async def adminscmd(self, message):
        """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –≤ —á–∞—Ç–µ."""
        if not message.is_private:
            await message.edit("<b>–°—á–∏—Ç–∞–µ–º...</b>")
            info = await message.client.get_entity(message.chat_id)
            title = info.title or "this chat"

            admins = await message.client.get_participants(
                message.chat_id, filter=ChannelParticipantsAdmins
            )
            mentions = f'<b>–ê–¥–º–∏–Ω–æ–≤ –≤ "{title}": {len(admins)}</b>\n'

            for user in admins:
                admin = admins[
                    admins.index((await message.client.get_entity(user.id)))
                ].participant
                if not admin:
                    if type(admin) == ChannelParticipantCreator:
                        rank = "creator"
                    else:
                        rank = "admin"
                else:
                    rank = admin.rank or "admin"

                if not user.deleted:
                    mentions += (
                        f'\n‚Ä¢ <a href="tg://user?id={user.id}">{user.first_name}</a> |'
                        f" {rank} | <code>{user.id}</code>"
                    )
                else:
                    mentions += f"\n‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç <b>|</b> <code>{user.id}</code>"

            try:
                await message.edit(mentions)
            except MessageTooLongError:
                await message.edit(
                    "–ß–µ—Ä—Ç, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–æ–≤ –∑–¥–µ—Å—å. –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –≤"
                    " —Ñ–∞–π–ª..."
                )
                file = open("adminlist.md", "w+")
                file.write(mentions)
                file.close()
                await message.client.send_file(
                    message.chat_id,
                    "adminlist.md",
                    caption='<b>–ê–¥–º–∏–Ω–æ–≤ –≤ "{}":<b>'.format(title),
                    reply_to=message.id,
                )
                remove("adminlist.md")
                await message.delete()
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b>")
        
    async def smcmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑—É–π: .sm ¬´–Ω–∞–∑–≤–∞–Ω–∏–µ¬ª —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        if not args:
            return await message.edit("<b>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</b>")
        try:
            await message.edit("<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>")
            music = await message.client.inline_query("lybot", args)
            await message.delete()
            await message.client.send_file(
                message.to_id,
                music[0].result.document,
                reply_to=reply.id if reply else None,
            )
        except:
            return await message.client.send_message(
                message.chat_id,
                f"<b>–ú—É–∑—ã–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <code>{args}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</b>",
            )

    async def botscmd(self, message):
        """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –≤ —á–∞—Ç–µ."""
        if not message.is_private:
            await message.edit("<b>–°—á–∏—Ç–∞–µ–º...</b>")

            info = await message.client.get_entity(message.chat_id)
            title = info.title if info.title else "this chat"

            bots = await message.client.get_participants(
                message.to_id, filter=ChannelParticipantsBots
            )
            mentions = f'<b>–ë–æ—Ç–æ–≤ –≤ "{title}": {len(bots)}</b>\n'

            for user in bots:
                if not user.deleted:
                    mentions += (
                        f'\n‚Ä¢ <a href="tg://user?id={user.id}">{user.first_name}</a> |'
                        f" <code>{user.id}</code>"
                    )
                else:
                    mentions += f"\n‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—ã–π –±–æ—Ç <b>|</b> <code>{user.id}</code>"

            try:
                await message.edit(mentions, parse_mode="html")
            except MessageTooLongError:
                await message.edit(
                    "–ß–µ—Ä—Ç, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –±–æ—Ç–æ–≤ –∑–¥–µ—Å—å. –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ –≤ —Ñ–∞–π–ª..."
                )
                file = open("botlist.md", "w+")
                file.write(mentions)
                file.close()
                await message.client.send_file(
                    message.chat_id,
                    "botlist.md",
                    caption='<b>–ë–æ—Ç–æ–≤ –≤ "{}":</b>'.format(title),
                    reply_to=message.id,
                )
                remove("botlist.md")
                await message.delete()
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b>")
        
    @loader.command()
    async def stats(self, message):
            """ùöùùöéùöïùöéùöêùöõùöäùöñ ùöäùöåùöåùöòùöûùöóùöù ùöúùöùùöäùöùùöíùöúùöùùöíùöåùöú"""

            await utils.answer(message, self.strings['loading_stats'])
            u_chat = 0
            b_chat = 0
            c_chat = 0
            ch_chat = 0
            all_chats = 0

            async for dialog in self._client.iter_dialogs():
                all_chats += 1
                if dialog.is_user:
                    if dialog.entity.bot:
                        b_chat += 1
                    elif not dialog.entity.bot:
                        u_chat += 1
                elif dialog.is_group:
                    c_chat += 1
                elif dialog.is_channel:
                    if dialog.entity.megagroup or dialog.entity.gigagroup:
                        if dialog.entity.megagroup:
                            c_chat += 1
                        elif dialog.entity.gigagroup:
                            c_chat += 1
                    elif not dialog.entity.megagroup and not dialog.entity.gigagroup:
                        ch_chat += 1
            await utils.answer(message,
    f"""<b><emoji document_id=5370740407602782301>‚úùÔ∏è</emoji> ùöñùö¢ ùöúùöùùöäùöùùöíùöúùöùùöíùöåùöú ùöíùöó ùöùùöéùöïùöéùöêùöõùöäùöñ

    <emoji document_id=6028338546736107668>‚≠êÔ∏è</emoji> ùöùùöòùöùùöäùöï ùöåùöëùöäùöùùöú: <code>{all_chats}</code>

    <emoji document_id=6037249452824072506>üîí</emoji> <code>{u_chat}</code> ùöôùöéùöõùöúùöòùöóùöäùöï ùöåùöëùöäùöùùöú
    <emoji document_id=5879905000972358125>üë•</emoji> <code>{c_chat}</code> ùöêùöõùöòùöûùöôùöú
    <emoji document_id=6021418126061605425>üì¢</emoji> <code>{ch_chat}</code> ùöåùöëùöäùöóùöóùöéùöïùöú
    <emoji document_id=5258093637450866522>ü§ñ</emoji> <code>{b_chat}</code> ùöãùöòùöùùöú</b>""")
            
